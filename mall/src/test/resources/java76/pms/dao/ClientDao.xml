<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 
namespace: SQL문을 분류하는 용도로 사용하는 그룹명.
           프로그래밍의 일관성을 위해서 가능한 DAO의 패키지명과 같게 하라!
 -->
<mapper namespace="java76.pms.dao.ClientDao">
  <!-- 컬럼 이름과 프로퍼티 이름이 다를 때, 연결 정보를 정의해두면 select할 때 편리하다. -->
  <resultMap type="client" id="clientMap">
  </resultMap>
  
  
  <!-- SQL문은 <select>, <insert>, <update>, <delete> 엘리먼트에 작성한다.
       => id 속성: SQL문을 찾을 때 사용할 아이디. 가능한 DAO의 메서드 이름과 같게 하라!
       => resultType 속성: select 결과를 담을 값 객체 이름. fully qualified name.
   -->
  <select id="selectList" resultMap="clientMap" parameterType="map">
    select 
      name,
      age,
      address,
      tel,
      id,
      password 
    from client
    order by 
    <choose>
      <when test="keyword == 'name'"> name </when>
      <when test="keyword == 'tel'"> tel </when>
      <otherwise> id </otherwise>
    </choose>
    <choose>
      <when test="align == 'asc'">asc</when>
      <otherwise>desc</otherwise>
    </choose>
    limit #{startIndex}, #{length}
    
  </select>
  
  <insert id="insert" parameterType="client">
    insert into client(name,age,address,tel,id,password) 
    values(#{name},#{age},#{address},#{tel},#{id},#{password})
  </insert>
  
  <delete id="delete" parameterType="String">
    delete from client where id=#{value}
  </delete>
  
  <update id="update" parameterType="client">
    update client set 
      name=#{name},
      age=#{age},
      address=#{address},
      tel=#{tel}
    where name=#{name}
  </update>
  
  <select id="selectOne" resultMap="clientMap" parameterType="String">
    select 
      name,
      age,
      address,
      tel,
      id,
      password 
    from client
    where id=#{id}
  </select>
  
  <select id="login" resultType="item" parameterType="map">
    select name, age, address, tel
    from student
    where id=#{id} and password=sha1(#{password})
  </select>
</mapper>





